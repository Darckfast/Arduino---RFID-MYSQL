-- MySQL Script generated by MySQL Workbench
-- Sun Sep 23 16:34:57 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema arduino
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `arduino` ;

-- -----------------------------------------------------
-- Schema arduino
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `arduino` DEFAULT CHARACTER SET utf8 ;
USE `arduino` ;

-- -----------------------------------------------------
-- Table `arduino`.`ACCESS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `arduino`.`ACCESS` ;

CREATE TABLE IF NOT EXISTS `arduino`.`ACCESS` (
  `idACCESS` INT NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(1),
  `nivel` INT NOT NULL,
  PRIMARY KEY (`idACCESS`),
  UNIQUE INDEX `idACCESS_UNIQUE` (`idACCESS` ASC));


-- -----------------------------------------------------
-- Table `arduino`.`CARD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `arduino`.`CARD` ;

CREATE TABLE IF NOT EXISTS `arduino`.`CARD` (
  `idCARD` INT NOT NULL AUTO_INCREMENT,
  `hash` VARCHAR(32) NOT NULL,
  `status` VARCHAR(1) NOT NULL,
  `ACCESS_idACCESS` INT NOT NULL,
  PRIMARY KEY (`idCARD`, `ACCESS_idACCESS`),
  UNIQUE INDEX `idCARD_UNIQUE` (`idCARD` ASC) ,
  INDEX `fk_CARD_ACCESS1_idx` (`ACCESS_idACCESS` ASC) ,
  CONSTRAINT `fk_CARD_ACCESS1`
    FOREIGN KEY (`ACCESS_idACCESS`)
    REFERENCES `arduino`.`ACCESS` (`idACCESS`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `arduino`.`OPERATOR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `arduino`.`OPERATOR` ;

CREATE TABLE IF NOT EXISTS `arduino`.`OPERATOR` (
  `idUSER` INT NOT NULL AUTO_INCREMENT,
  `cpf` VARCHAR(45) ,
  `nome` VARCHAR(45) NOT NULL,
  `status` VARCHAR(1) NOT NULL,  
  `email` VARCHAR(45),
  `telefone` LONG ,
  `CARD_idCARD` INT NOT NULL,
  PRIMARY KEY (`idUSER`, `CARD_idCARD`),
  UNIQUE INDEX `idUSER_UNIQUE` (`idUSER` ASC) ,
  INDEX `fk_OPERATOR_CARD1_idx` (`CARD_idCARD` ASC) ,
  CONSTRAINT `fk_OPERATOR_CARD1`
    FOREIGN KEY (`CARD_idCARD`)
    REFERENCES `arduino`.`CARD` (`idCARD`));


-- -----------------------------------------------------
-- Table `arduino`.`ROOM`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `arduino`.`ROOM` ;

CREATE TABLE IF NOT EXISTS `arduino`.`ROOM` (
  `idROOM` INT NOT NULL AUTO_INCREMENT,
  `nome_sala` VARCHAR(45) NOT NULL,
  `status` VARCHAR(1) NOT NULL,
  `ACCESS_idACCESS` INT ,
  PRIMARY KEY (`idROOM`, `ACCESS_idACCESS`),
  INDEX `fk_ROOM_ACCESS1_idx` (`ACCESS_idACCESS` ASC) ,
  CONSTRAINT `fk_ROOM_ACCESS1`
    FOREIGN KEY (`ACCESS_idACCESS`)
    REFERENCES `arduino`.`ACCESS` (`idACCESS`))
;


-- -----------------------------------------------------
-- Table `arduino`.`LOGS_ACESS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `arduino`.`LOGS_ACESS` ;

CREATE TABLE IF NOT EXISTS `arduino`.`LOGS_ACESS` (
  `idLOG` INT NOT NULL AUTO_INCREMENT,
  `CARD_idCARD` INT,
  `hash` VARCHAR(32) NOT NULL,
  `data` VARCHAR(20) NOT NULL,
  `OPERATOR_idUSER` INT,
  `nome` VARCHAR(20),
  `granted` INT NOT NULL,
  `ROOM_idROOM` INT,
  `Sala` VARCHAR(20),
  PRIMARY KEY (`idLOG`, `ROOM_idROOM`),
  UNIQUE INDEX `idLOG_UNIQUE` (`idLOG` ASC) ,
  INDEX `fk_LOGS_ACESS_ROOM1_idx` (`ROOM_idROOM` ASC) ,
  INDEX `fk_LOGS_ACESS_CARD1_idx` (`CARD_idCARD` ASC) ,
  INDEX `fk_LOGS_ACESS_OPERATOR1_idx` (`OPERATOR_idUSER` ASC) ,
  CONSTRAINT `fk_LOGS_ACESS_ROOM1`
    FOREIGN KEY (`ROOM_idROOM`)
    REFERENCES `arduino`.`ROOM` (`idROOM`),
  CONSTRAINT `fk_LOGS_ACESS_CARD1`
    FOREIGN KEY (`CARD_idCARD`)
    REFERENCES `arduino`.`CARD` (`idCARD`),
  CONSTRAINT `fk_LOGS_ACESS_OPERATOR1`
    FOREIGN KEY (`OPERATOR_idUSER`)
    REFERENCES `arduino`.`OPERATOR` (`idUSER`));


-- -----------------------------------------------------
-- Table `arduino`.`USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `arduino`.`USER` ;

CREATE TABLE IF NOT EXISTS `arduino`.`USER` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(65) NOT NULL,
  `status` VARCHAR(1) NOT NULL,
  `OPERATOR_idUSER` INT,
  PRIMARY KEY (`id_user`),
  UNIQUE INDEX `id_user_UNIQUE` (`id_user` ASC))
;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO USER (login, password, status) values(1,1,"A");
INSERT INTO ACCESS (nivel, status) VALUES (1, "A");
INSERT INTO ACCESS (nivel,status) VALUES (2, "A");
INSERT INTO ACCESS (nivel,status) VALUES (3, "A");
INSERT INTO ACCESS (nivel,status) VALUES (4, "A");
INSERT INTO CARD (hash, status,ACCESS_idACCESS ) VALUES (123,"A", 1);
INSERT INTO OPERATOR ( nome, status, CARD_idCARD) VALUES ("TESTE", "A", 1);
INSERT INTO ROOM (nome_sala, status, ACCESS_idACCESS) VALUES ("SALA TESTE", "A", 1);

SELECT * FROM LOGS_ACESS;
SELECT * FROM OPERATOR;
SELECT * FROM ROOM;
SELECT * FROM arduino.CARD;

INSERT INTO LOGS_ACESS (hash,data,granted,ROOM_idROOM) VALUES ("AA","1/1/1",0,1);


DROP TRIGGER IF EXISTS selectOperator;
delimiter |
CREATE TRIGGER `selectOperator` BEFORE INSERT ON `LOGS_ACESS`
FOR EACH ROW 
BEGIN
	SET NEW.OPERATOR_idUSER = (SELECT idUSER FROM OPERATOR WHERE CARD_idCARD = (SELECT idCARD FROM CARD WHERE HASH = NEW.hash ));
	SET NEW.nome = (SELECT NOME FROM OPERATOR WHERE IDUSER = NEW.OPERATOR_idUSER);
    SET NEW.CARD_idCARD = (SELECT idCARD FROM CARD WHERE hash = NEW.hash);
	SET NEW.Sala = (SELECT nome_sala FROM ROOM WHERE idROOM = NEW.ROOM_idROOM);
END
|
delimiter ;